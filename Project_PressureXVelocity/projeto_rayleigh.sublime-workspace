{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"u",
				"u"
			],
			[
				"i",
				"i"
			],
			[
				"ii",
				"ii"
			],
			[
				"d",
				"do"
			],
			[
				"graph",
				"graphics"
			],
			[
				"in",
				"in"
			],
			[
				"ident",
				"identity_directory"
			],
			[
				"identity",
				"identity_decision"
			],
			[
				"y",
				"ypixel"
			],
			[
				"Typ",
				"Type_of_visualization"
			],
			[
				"tYPE",
				"Type_of_visualization"
			],
			[
				"w",
				"type_Wall"
			],
			[
				"pre",
				"pressure_step"
			],
			[
				"do",
				"do"
			],
			[
				"velocity",
				"velocity_solver"
			],
			[
				"time",
				"time_steps"
			],
			[
				"P",
				"P"
			],
			[
				"Ny",
				"Ny"
			],
			[
				"Nx",
				"Nx"
			],
			[
				"Type",
				"type_Wall"
			],
			[
				"c",
				"cell"
			],
			[
				"window",
				"Windows_name"
			],
			[
				"v",
				"v"
			],
			[
				"flag",
				"FLAG"
			],
			[
				"sub",
				"subroutine"
			],
			[
				"mod",
				"module"
			],
			[
				"er",
				"erro"
			],
			[
				"ee",
				"ee"
			],
			[
				"linear",
				"linear_e1"
			],
			[
				"tm",
				"temperatura"
			],
			[
				"T",
				"T"
			],
			[
				"font",
				"fontsize"
			],
			[
				"criar",
				"CriarImagem"
			],
			[
				"file",
				"file_path"
			],
			[
				"data_",
				"data_Rosen"
			],
			[
				"valor",
				"valorInicial"
			],
			[
				"z",
				"zPrandtl"
			],
			[
				"Re",
				"Ret"
			],
			[
				"ios",
				"iostream\tstandard header"
			],
			[
				"math",
				"math.h\tstandard header (deprecated)"
			],
			[
				"L",
				"L2"
			],
			[
				"parame",
				"Parameters"
			],
			[
				"L2",
				"L2norm"
			],
			[
				"DNS",
				"DNSinput"
			],
			[
				"Prandtl",
				"Prandtlvector"
			],
			[
				"prandtl",
				"prandtll"
			],
			[
				"p",
				"p"
			],
			[
				"adeq",
				"adequa"
			],
			[
				"N",
				"N"
			],
			[
				"incre",
				"inccrelog"
			],
			[
				"G",
				"GetScale"
			],
			[
				"Get",
				"GetVelocity"
			],
			[
				"dra",
				"drawPlayer"
			],
			[
				"draw",
				"drawWalls"
			],
			[
				"Reset",
				"ResetScale"
			],
			[
				"M",
				"MenuIniciar"
			],
			[
				"string",
				"string.h\tstandard header (deprecated)"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Teorico/src/main3.f90",
			"settings":
			{
				"buffer_size": 24835,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "program cavidade"
			}
		},
		{
			"contents": "! Code for the creation of visualization native in fortran.\n! Version 1.0.0\n\n! Main module for global variables\nmodule graphics\n    !OPENGL libraries\n    use, intrinsic :: ISO_C_BINDING\n    use mpi\n    use opengl_gl\n    use opengl_glu\n    use opengl_glut\n    implicit none\n\n\n    ! Definition of vertez entity for line rendering\n    type Line\n\n        Real :: x , y\n\n    end type\n\n\n\n    !Parameters for graphical global variables:\n    integer :: window ,  xpixel , ypixel                                                   !window id , size of window\n    double precision , dimension(:,:), allocatable :: dBuffer,dBuffer1,dBuffer2,dBuffer3   !Screen data buffer\n    character*200 :: windows_name                                                          !Name of the window\n    integer:: ERROR , status(MPI_STATUS_SIZE)                                              !MPI stuf\n    integer:: i , ii , iii                                                                 !Integer counters\n    integer:: Nx, Ny                                                                       !Simulation buffer size\n    integer:: Type_of_visualization                                                        !Type of graphics\n\n\n\n\n    !Functions for dysplaing data\n    contains\n\n        !Function that is called once per frame. Type 1\n        subroutine idle1() bind(C)\n\n            call glClear(ior(GL_COLOR_BUFFER_BIT,GL_DEPTH_BUFFER_BIT))\n            call glclear(GL_COLOR_BUFFER_BIT+GL_DEPTH_BUFFER_BIT)             !Clear screen for new frame\n            Allocate(dBuffer(Nx + 2 , Ny + 2))\n            call assimilation()           !Function that get values\n            call scatter1()                !Render heatmap\n            call Legend()                 !Render Legend\n            deallocate(dBuffer)\n            call glutSwapBuffers()       !send new buffer of collors simutaneusly for rendering, prevent tearing\n            call glflush()               !Process OPENGL precompiled codes\n\n        end subroutine idle1\n\n\n        !Function that is called once per frame.Type 2\n        subroutine idle2() bind(C)\n\n\n            call glClear(ior(GL_COLOR_BUFFER_BIT,GL_DEPTH_BUFFER_BIT))\n            call glclear(GL_COLOR_BUFFER_BIT+GL_DEPTH_BUFFER_BIT)             !Clear screen for new frame\n            Allocate(dBuffer(Nx + 2 , Ny + 2) , dBuffer1(Nx + 2 , Ny + 2))\n            call scatter2()                !Render heatmap\n            call Legend()                  !Render Legend\n            call Flux_line()               !Create flux lines\n            deallocate(dBuffer , dBuffer1)\n            call glutSwapBuffers()         !send new buffer of collors simutaneusly for rendering, prevent tearing\n            call glflush()                 !Process OPENGL precompiled codes\n\n        end subroutine idle2\n\n\n        !Function to text drawning\n        subroutine output(x, y, text)\n\n            real(glfloat) x,y\n            character(len=*) text\n            integer(glcint) p\n\n            call glRasterPos2i(50, 60)\n            call glPushMatrix()\n            call glTranslatef(x, y, 0.0_glfloat)\n            do i=1,len(text)\n                p = ichar(text(i:i))\n                call glutBitmapCharacter(GLUT_BITMAP_HELVETICA_18, p)\n            end do\n            call glPopMatrix()\n        end subroutine output\n\nend module graphics\n\n\n\n\n\n\n\n! Rotine of creation, configuration and data assimilation of simulation results\nsubroutine Visualization()\n    use graphics\n    implicit none\n\n    !Initial comunication with simulation\n    call MPI_RECV( Nx , 1 , MPI_INTEGER , 0 , 1 , MPI_COMM_WORLD , STATUS  , ERROR)                          !Size of simulation data buffer in x\n    call MPI_RECV( Ny , 1 , MPI_INTEGER , 0 , 0 , MPI_COMM_WORLD , STATUS  , ERROR)                          !Size of simulation data buffer in y\n    call MPI_RECV( Windows_name , 200 , MPI_CHARACTER , 0 , 1 , MPI_COMM_WORLD , STATUS  , ERROR)            !Name of the window of visualization\n    call MPI_RECV( Type_of_visualization , 1 , MPI_INTEGER , 0 , 0 , MPI_COMM_WORLD , STATUS  , ERROR)       !Type of visualization\n\n    !Initial parametrization determinations\n    ypixel = 300                                             !vertical size of window in pixels\n\n    select case (Type_of_visualization)\n        case(1)\n            xpixel = int(ypixel * real(Nx + 2)/real(Ny + 2))                      !horizontal size of window in pixels for type 1\n        case(2)\n            xpixel = real(4.25) * int(ypixel * real(Nx + 2)/real(Ny + 2))         !horizontal size of window in pixels for type 2\n    end select\n\n    !Main visualization subroutines\n    call NewWindow()         !Window creation\n    call ConfigureWindow()   !Window configuration\n    call glutmainloop()      !Enter IDLE protocol\n\n\nend subroutine Visualization\n\n\n\n\n\n\n\n\n\n!Subroutine to create a window\nsubroutine NewWindow()\n    use graphics\n    implicit none\n\n    call glutinit()\n    call glutinitdisplaymode(GLUT_DOUBLE+GLUT_RGB+GLUT_DEPTH)              !Exibicion mode\n    call glutInitWindowSize(xpixel, ypixel)                                !Determine window width in pixels\n    window = glutcreatewindow(trim(Windows_name))                          !A name is given to the window\n\n    select case(Type_of_visualization)                                     !Select type of visualization (single of multiple)\n        case(1)\n            call glutIdleFunc(idle1)                                       !single window\n        case(2)\n            call glutIdleFunc(idle2)                                       !multi window\n    end select\n\n    return\n\nend subroutine NewWindow\n\n\n\n! Configuring the window\nsubroutine ConfigureWindow()\n    use graphics\n    implicit none\n\n    call glclearcolor(1.0, 1.0, 1.0, 0.0)                                  !seta cor no background.\n    call glmatrixmode(GL_PROJECTION)                                       !Matrix context of operations\n    call glloadidentity()                                                  !Identity matrix loaded\n    call glortho(0.0d0, 1.0d0, 0.0d0, 1.0d0, -0.5d0, 0.5d0)                !Limits (left, right, down, up, close to the camera, far from the camera)\n    call glEnableClientState(GL_VERTEX_ARRAY)                              !Funcionalities\n    call glEnable(GL_BLEND)                                                !Blend\n    call glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA)                 !Blend function\n    call glEnable(GL_LINE_SMOOTH)                                          !Smooth edges\n\nend subroutine ConfigureWindow\n\n\n\n!Assimilation of DATA from simulation routine\nsubroutine assimilation()\n    use graphics\n    implicit none\n\n    !Allocate allocatables\n    call MPI_RECV( dBuffer , size(dBuffer) , MPI_DOUBLE_PRECISION , 0 , 1 , MPI_COMM_WORLD , STATUS  , ERROR)                  !DATA from simulation routine\n\nend subroutine assimilation\n\n\n!Heatmap rendering engine\nsubroutine scatter1()\n    use graphics\n    implicit none\n\n    !Draw points:\n    call glBlendFunc(GL_DST_ALPHA,GL_ONE_MINUS_DST_ALPHA)\n    call glPointSize( 1 +  real( ypixel/(Ny + 2) ) )                       !Size of points\n\n\n\n    !Drawing points in the screen\n    call glBegin(GL_POINTS)\n    do i = 1 , size(dBuffer(: , 1))\n        do ii = 1 , size(dBuffer(1 , :))\n            if(dBuffer(i , ii) < 0)then\n                call glcolor3f(0.1, 1.0 - real(abs(dBuffer(i , ii)))/MAXVAL(real(abs(dBuffer(:,:)))), 0.1 + &\n                    abs(real((dBuffer(i , ii))/MAXVAL(real(abs(dBuffer(:,:)))))))\n                call glVertex2f( real(0.05) + real(0.9)*(real(i-0.5))/real(size(dBuffer(:,1))), &\n                            real(0.05) + real(0.9)*(real(ii - 0.5))/real(size(dBuffer(1 , :))) )\n            else\n                call glcolor3f(real(dBuffer(i , ii)/MAXVAL(real(abs(dBuffer(:,:)))) )+ 0.1, 1 - real(dBuffer(i , ii)/&\n                        MAXVAL(real(abs(dBuffer(:,:))))), 0.1)\n                call glVertex2f( real(0.05) + real(0.9)*(real(i-0.5))/real(size(dBuffer(:,1))), &\n                            real(0.05) + real(0.9)*(real(ii - 0.5))/real(size(dBuffer(1 , :))) )\n            end if\n        end do\n    end do\n    call glEnd()\n\n\nend subroutine scatter1\n\n\n\n\n\n\n!Heatmap rendering engine\nsubroutine Flux_line()\n    use graphics\n    implicit none\n\n    type(Line), dimension(:,:) , allocatable :: Lines\n    integer:: Numero_linhas , Numero_pontos , nnn\n    Real:: uu , vv , dx , dy \n\n    !Allocate allocatables\n    call MPI_RECV( dBuffer , size(dBuffer) , MPI_DOUBLE_PRECISION , 0 , 1 , MPI_COMM_WORLD , STATUS  , ERROR)                   !u\n\n    !Allocate allocatables\n    call MPI_RECV( dBuffer1 , size(dBuffer) , MPI_DOUBLE_PRECISION , 0 , 1 , MPI_COMM_WORLD , STATUS  , ERROR)                  !v\n\n\n    Numero_linhas = 10\n    Numero_pontos = 50\n\n\n    dx = 1/{size(dBuffer(:,1)) - 2}\n\n    dy = 1/{size(dBuffer(1,:)) - 2}\n\n    \n    allocate(Lines(Numero_linhas , Numero_pontos))\n\n    !Prepare renderer\n\n    !initial point do\n    do i = 1 , size( Lines(:,1) )\n\n        Lines(i,1)%x = 0.5\n\n        Lines(i,1)%y =  0.05 + 0.9 * ( real(i) /real(size( Lines(:,1) ) ))\n        print*, Lines(i,1)%y , Lines(i,1)%x\n\n    end do\n\n    !Constructing Space information\n\n    do i = 1 , dBuffer(: , 1)\n        do ii = 1 , dBuffer(1 , :)\n\n\n\n        end do\n    end do\n\n\n\n    !RungeKutta Line creation:\n    do i = 1 , size( Lines(:,1) )\n\n        !Primeira tentativa: Euler\n        do ii = 2 , size( Lines(1,:) )\n\n            !Deinição das velocidades u e v da coordenada em questão POR VIAS DE INTERPOLAÇÃO:\n            uu = dBuffer(  size(dBuffer(:,1)) , size(dBuffer(1,:))  )\n            vv = dBuffer1(  size(dBuffer1(:,1)) , size(dBuffer1(1,:))  )\n\n            !Definição do ponto seguinte\n            Lines(i,ii)%x = 1\n            Lines(i,ii)%y = 1\n\n        end do\n\n    end do\n\n\n\n    !Render each line for each group of points\n    do i = 1 , size( Lines(:,1) )\n        call glBegin(GL_LINE_LOOP)\n\n            ! vertex definition of all points.\n            do ii = 1 , size( Lines(1,:) )\n\n            call glVertex2f( Lines(i , ii)%x , Lines(i , ii)%y )\n\n            end do\n\n        call glEnd()\n    end do\n\n\n    deallocate(Lines)\n    return\n\n\nend subroutine Flux_line\n\n\n\n\n\n\n\n\n!Heatmap rendering engine\nsubroutine scatter2()\n    use graphics\n    implicit none\n\n    !Draw points:\n    call glBlendFunc(GL_DST_ALPHA,GL_ONE_MINUS_DST_ALPHA)\n    call glPointSize( real(1 +  ypixel/(Ny + 2) ) )                       !Size of points\n\n    call assimilation()           !Function that get values\n\n    !Drawing points in the screen 1\n    call glBegin(GL_POINTS)\n    do i = 1 , size(dBuffer(: , 1))\n        do ii = 1 , size(dBuffer(1 , :))\n            if(dBuffer(i , ii) < 0)then\n                call glcolor3f(0.1, 1.0 - real(abs(dBuffer(i , ii)))/MAXVAL(real(abs(dBuffer(:,:)))), 0.1 + &\n                    abs(real((dBuffer(i , ii))/MAXVAL(real(abs(dBuffer(:,:)))))))\n            else\n                call glcolor3f(real(dBuffer(i , ii)/MAXVAL(real(abs(dBuffer(:,:)))) )+ 0.1, 1 - real(dBuffer(i , ii)/&\n                        MAXVAL(real(abs(dBuffer(:,:))))), 0.1)\n            end if\n\n            call glVertex2f( real(0.0117647059) + real(0.2352941176) * (real(i))/real(size(dBuffer(:,1))), &\n                            real(0.05)      + real(0.9) * (real(ii))/real(size(dBuffer(1,:)))  )\n        end do\n    end do\n    call glEnd()\n\n    call assimilation()           !Function that get values\n\n    !Drawing points in the screen 2\n    call glBegin(GL_POINTS)\n    do i = 1 , size(dBuffer(: , 1))\n        do ii = 1 , size(dBuffer(1 , :))\n            if(dBuffer(i , ii) < 0)then\n                call glcolor3f(0.1, 1.0 - real(abs(dBuffer(i , ii)))/MAXVAL(real(abs(dBuffer(:,:)))), 0.1 + &\n                    abs(real((dBuffer(i , ii))/MAXVAL(real(abs(dBuffer(:,:)))))))\n            else\n                call glcolor3f(real(dBuffer(i , ii)/MAXVAL(real(abs(dBuffer(:,:)))) )+ 0.1, 1 - real(dBuffer(i , ii)/&\n                        MAXVAL(real(abs(dBuffer(:,:))))), 0.1)\n            end if\n\n            call glVertex2f( real(0.2588235294) + real(0.2352941176) * (real(i))/real(size(dBuffer(:,1))), &\n                            real(0.05)      + real(0.9) * (real(ii))/real(size(dBuffer(1,:)))  )\n        end do\n    end do\n    call glEnd()\n\n    call assimilation()           !Function that get values\n\n    !Drawing points in the screen 3\n    call glBegin(GL_POINTS)\n    do i = 1 , size(dBuffer(: , 1))\n        do ii = 1 , size(dBuffer(1 , :))\n            if(dBuffer(i , ii) < 0)then\n                call glcolor3f(0.1, 1.0 - real(abs(dBuffer(i , ii)))/MAXVAL(real(abs(dBuffer(:,:)))), 0.1 + &\n                    abs(real((dBuffer(i , ii))/MAXVAL(real(abs(dBuffer(:,:)))))))\n            else\n                call glcolor3f(real(dBuffer(i , ii)/MAXVAL(real(abs(dBuffer(:,:)))) )+ 0.1, 1 - real(dBuffer(i , ii)/&\n                        MAXVAL(real(abs(dBuffer(:,:))))), 0.1)\n            end if\n\n            call glVertex2f( real(0.5058823529) + real(0.2352941176) * (real(i))/real(size(dBuffer(:,1))), &\n                            real(0.05)      + real(0.9) * (real(ii))/real(size(dBuffer(1,:)))  )\n        end do\n    end do\n    call glEnd()\n\n    call assimilation()           !Function that get values\n\n    !Drawing points in the screen 4\n    call glBegin(GL_POINTS)\n    do i = 1 , size(dBuffer(: , 1))\n        do ii = 1 , size(dBuffer(1 , :))\n            if(dBuffer(i , ii) < 0)then\n                call glcolor3f(0.1, 1.0 - real(abs(dBuffer(i , ii)))/MAXVAL(real(abs(dBuffer(:,:)))), 0.1 + &\n                    abs(real((dBuffer(i , ii))/MAXVAL(real(abs(dBuffer(:,:)))))))\n            else\n                call glcolor3f(real(dBuffer(i , ii)/MAXVAL(real(abs(dBuffer(:,:)))) )+ 0.1, 1 - real(dBuffer(i , ii)/&\n                        MAXVAL(real(abs(dBuffer(:,:))))), 0.1)\n            end if\n\n            call glVertex2f( real(0.7529411765) + real(0.2352941176) * (real(i))/real(size(dBuffer(:,1))), &\n                            real(0.05)      + real(0.9) * (real(ii))/real(size(dBuffer(1,:)))  )\n        end do\n    end do\n    call glEnd()\n\n\n\nend subroutine scatter2\n\n\n\n\n\n!Rotine that DRAWS the Legend on the screen\nsubroutine legend() bind(C)\n    use graphics\n\n  call glPushAttrib(GL_ENABLE_BIT)\n  call glcolor3f(0.0, 0.0 , 0.0)\n  call glMatrixMode(GL_PROJECTION)\n  call glPointSize( 0.2 )                       !Size of points\n  call glLineWidth(0.1)\n  call glLoadIdentity()\n  call gluOrtho2D(0.0_gldouble, 1500.0_gldouble, 0.0_gldouble, 1500.0_gldouble * ypixel/xpixel)\n  call glscalef(.11,.11,.11)\n  call glMatrixMode(GL_MODELVIEW)\n  call glLoadIdentity()\n!  Rotate text slightly to help show jaggies\n  call output(100.0, 60.0, \"Aqui temos texto escrito na tela, quem diria algo assim aqui!\")\n  call glPopMatrix()\n  call glMatrixMode(GL_PROJECTION)\n  call glPopMatrix()\n    call glscalef(1.0/0.11,1.0/0.11,1.0/0.11)\n  call glPopAttrib()\n\n\n  call glloadidentity()                                                  !Identity matrix loaded\n  call glortho(0.0d0, 1.0d0, 0.0d0, 1.0d0, -0.5d0, 0.5d0)                !Limits (left, right, down, up, close to the camera, far from the camera)\n  call glEnableClientState(GL_VERTEX_ARRAY)                              !Funcionalities\n\n\n\n\nend subroutine legend\n",
			"file": "Teorico/src/visualization.f90",
			"file_size": 15112,
			"file_write_time": 132199540280413556,
			"settings":
			{
				"buffer_size": 15196,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Teorico/src/blender.f90",
			"settings":
			{
				"buffer_size": 3030,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Teorico/Tento/OpenGl/expe.f90",
			"settings":
			{
				"buffer_size": 5906,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Teorico/src/main_4/main.F90",
			"settings":
			{
				"buffer_size": 22425,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Teorico/src/main_4/simulation.F90",
			"settings":
			{
				"buffer_size": 7758,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Teorico/src/main_4/visualization.F90",
			"settings":
			{
				"buffer_size": 7701,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Teorico/src/main_4/parallel_simu.F90",
			"settings":
			{
				"buffer_size": 2281,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/epta_sta_cpp.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/mpi2winfort.sublime-build",
					""
				],
				[
					"Packages/User/OpenGlf90.sublime-build",
					""
				]
			],
			[
				"Packages/User/OpenGlf90.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/mpi2winfort.sublime-build",
					""
				],
				[
					"Packages/User/OpenGlf90.sublime-build",
					""
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/gplusplusPiloto.sublime-build",
					""
				],
				[
					"Packages/User/gplusplusPiloto.sublime-build",
					"Run"
				],
				[
					"Packages/User/multifile.sublime-build",
					""
				],
				[
					"Packages/User/multifile.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/gplusplusPiloto.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/gplusplusPiloto.sublime-build",
					""
				],
				[
					"Packages/User/multifile.sublime-build",
					""
				],
				[
					"Packages/User/multifile.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/gplusplusPiloto.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/multifile.sublime-build",
					""
				],
				[
					"Packages/User/multifile.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/opengl.sublime-build",
					""
				]
			],
			[
				"Packages/User/opengl.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					""
				],
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					"Run"
				]
			],
			[
				"Packages/Fortran/build-systems/GFortran.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					""
				],
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					"Run"
				],
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				]
			],
			[
				"Packages/User/fortran2win.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					""
				],
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					"Run"
				],
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/OpenGlf90.sublime-build",
					""
				]
			],
			[
				"Packages/User/fortran2win.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					""
				],
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					"Run"
				],
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/make_file.sublime-build",
					""
				],
				[
					"Packages/User/OpenGlf90.sublime-build",
					""
				]
			],
			[
				"Packages/User/fortran2win.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					""
				],
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					"Run"
				],
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/make_file.sublime-build",
					""
				],
				[
					"Packages/User/mpi2winfort.sublime-build",
					""
				],
				[
					"Packages/User/OpenGlf90.sublime-build",
					""
				]
			],
			[
				"Packages/User/OpenGlf90.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					""
				],
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					"Run"
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				]
			],
			[
				"Packages/User/fortran2win.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					""
				],
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					"Run"
				],
				[
					"Packages/User/gplusplusPiloto.sublime-build",
					""
				]
			],
			[
				"Packages/Fortran/build-systems/GFortran.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					""
				],
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					"Run"
				],
				[
					"Packages/User/gplusplusPiloto.sublime-build",
					""
				],
				[
					"Packages/User/gplusplusPiloto.sublime-build",
					"Run"
				]
			],
			[
				"Packages/Fortran/build-systems/GFortran.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					""
				],
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					"Run"
				],
				[
					"Packages/User/opengl.sublime-build",
					""
				]
			],
			[
				"Packages/Fortran/build-systems/GFortran.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/MinimalFortran/MinimalFortran.sublime-build",
					""
				],
				[
					"Packages/MinimalFortran/MinimalFortran.sublime-build",
					"Run"
				]
			],
			[
				"Packages/MinimalFortran/MinimalFortran.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/MinimalFortran/MinimalFortran.sublime-build",
					""
				],
				[
					"Packages/MinimalFortran/MinimalFortran.sublime-build",
					"Run"
				],
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/mpi2winfort.sublime-build",
					""
				],
				[
					"Packages/User/OpenGlf90.sublime-build",
					""
				]
			],
			[
				"Packages/User/OpenGlf90.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/MinimalFortran/MinimalFortran.sublime-build",
					""
				],
				[
					"Packages/MinimalFortran/MinimalFortran.sublime-build",
					"Run"
				],
				[
					"Packages/User/fortrandif.sublime-build",
					""
				]
			],
			[
				"Packages/User/fortrandif.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/OpenGlf90.sublime-build",
					""
				],
				[
					"Packages/User/Python2.sublime-build",
					""
				],
				[
					"Packages/User/Python2.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/Python2.sublime-build",
					""
				],
				[
					"Packages/User/Python2.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/make_file.sublime-build",
					""
				],
				[
					"Packages/User/OpenGlf90.sublime-build",
					""
				],
				[
					"Packages/User/Python2.sublime-build",
					""
				],
				[
					"Packages/User/Python2.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/make_file.sublime-build",
					""
				],
				[
					"Packages/User/mpi2winfort.sublime-build",
					""
				],
				[
					"Packages/User/OpenGlf90.sublime-build",
					""
				],
				[
					"Packages/User/Python2.sublime-build",
					""
				],
				[
					"Packages/User/Python2.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/mpi2winfort.sublime-build",
					""
				],
				[
					"Packages/User/OpenGlf90.sublime-build",
					""
				],
				[
					"Packages/User/Python2.sublime-build",
					""
				],
				[
					"Packages/User/Python2.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/User/Python2.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/Python2.sublime-build",
					""
				],
				[
					"Packages/User/Python2.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/User/fortrandif.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/User/opengl.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/make_file.sublime-build",
					""
				],
				[
					"Packages/User/mpi2winfort.sublime-build",
					""
				],
				[
					"Packages/User/OpenGlf90.sublime-build",
					""
				]
			],
			[
				"Packages/User/mpi2winfort.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/mpi2winfort.sublime-build",
					""
				],
				[
					"Packages/User/OpenGlf90.sublime-build",
					""
				]
			],
			[
				"Packages/User/epta_sta_cpp.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/gplusplusPiloto.sublime-build",
					""
				],
				[
					"Packages/User/gplusplusPiloto.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/gplusplusPiloto.sublime-build",
				"Run"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"package contr",
				"Package Control: Install Package"
			],
			[
				"package",
				"Preferences: Browse Packages"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"prv",
				"PackageResourceViewer: Open Resource"
			],
			[
				"package control install",
				"Package Control: Install Package"
			],
			[
				"packages",
				"PackageResourceViewer: Open Resource"
			],
			[
				"pa",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 86.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento"
	],
	"file_history":
	[
		"/home/felipe/.config/sublime-text-3/Packages/User/OpenGlf90.sublime-build",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/Referencias/main_1.f90",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/Referencias/main2.f90",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/src/update.py",
		"/home/felipe/Trabalho/ProjetoCebeci/main.f90",
		"/home/felipe/Trabalho/ProjetoCebeci/results/genetic_scatering.py",
		"/home/felipe/Trabalho/ProjetoCebeci/results/ajustecebeciclassico.py",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/Referencias/main3.f90",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/OpenGl/blender.f90",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/src/main.f90",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/OpenGl/mouse_bola_pinga.cpp",
		"/home/felipe/Trabalho/ProjetoCebeci/genetic_fit.f90",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/OpenGl/piloto.c",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/TEX/presentation.tex",
		"/home/felipe/Downloads/16_Games/16 Asteroids/main.cpp",
		"/home/felipe/Downloads/16_Games/01 Tetris/main.cpp",
		"/usr/bin/ld.bfd",
		"/usr/bin/ld",
		"/home/felipe/.config/sublime-text-3/Packages/User/fortran2win.sublime-build",
		"/home/felipe/.config/sublime-text-3/Packages/User/Python2.sublime-build",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/src/src.f90",
		"/home/felipe/Trabalho/ProjetoCebeci/genetic.f90",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/OpenGl/simple.f90",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/OpenGl/trivial.f90",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/OpenGl/expe.f90",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/OpenGl/flickering_end.f90",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/MPI/mpi1.f90",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_RECAP/OpenGlf90/src/trivial.f90",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_RECAP/OpenGlcpp/OpenGlcpp/src/Recap.cpp",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_RECAP/OpenGlcpp/OpenGlcpp/src/Difusion.cpp",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_RECAP/recap.cpp",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_RECAP/Documentation/Notes/Notas.tex",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/src/simulation.f90",
		"/home/felipe/.local/share/applications/blender.desktop",
		"/home/felipe/Modelos/blender-2.80-linux-glibc217-x86_64/readme.html",
		"/home/felipe/Modelos/blender-2.80-linux-glibc217-x86_64/blender.desktop",
		"/home/felipe/Downloads/f03gl/glutdino.f90",
		"/home/felipe/Downloads/f03gl/greenbook/Makefile",
		"/home/felipe/Downloads/f03gl/torus.f90",
		"/home/felipe/Downloads/f03gl/sphere.f90",
		"/home/felipe/Downloads/f03gl/olympic3.f90",
		"/home/felipe/Downloads/f03gl/trivial.f90",
		"/home/felipe/Downloads/f03gl/modview.f90",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/OpenGl/main.f90",
		"/home/felipe/Downloads/f03gl/Makefile",
		"/media/felipe/KINGSTON/arca/sublime/Python2.sublime-build",
		"/home/felipe/.config/sublime-text-3/Packages/User/mpi2winfort.sublime-build",
		"/home/felipe/Documents/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/OpenGl/blender.f90",
		"/home/felipe/Documents/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/MPI/mpi1.f90",
		"/home/felipe/Documents/ProjetoCebeci/teste.f90",
		"/home/felipe/Documents/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/src/main.f90",
		"/home/felipe/Documents/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/src/update.py",
		"/home/felipe/Documents/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/OpenGl/expe.f90",
		"/home/felipe/Documents/ProjetoCebeci/genetic.f90",
		"/home/felipe/Documents/ProjetoCebeci/main.f90",
		"/home/felipe/Documents/ProjetoCebeci/genetic_fit.f90",
		"/home/felipe/Downloads/0007 STRAKE Strakes.geo",
		"/home/felipe/Downloads/f03gl_1.0/f03gl/Makefile",
		"/home/felipe/Downloads/f03gl_1.0/f03gl/bluebook/Makefile",
		"/home/felipe/Downloads/f03gl_1.0/f03gl/blender.f90",
		"/home/felipe/Documents/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/OpenGl/expe",
		"/home/felipe/Documents/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/OpenGl/stars.f90",
		"/home/felipe/Documents/Iniciativa_Rayleigh/Project_RECAP/f03gl/array.f90",
		"/home/felipe/Documents/Iniciativa_Rayleigh/Project_RECAP/f03gl/eps.f90",
		"/home/felipe/Documents/ProjetoCebeci/results/genetic_scatering.py",
		"/home/felipe/Documents/ProjetoCebeci/results/resultados gerais.py",
		"/home/felipe/Documents/ProjetoCebeci/README",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene395_071_400_Ce2temperature.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/plotfit_prt_A.py",
		"/home/felipe/Documents/ProjetoCebeci/results/misc.py",
		"/home/felipe/Desktop/mca/untitled.py",
		"/home/felipe/Documents/ProjetoCebeci/results/graficos/amostras_temperature.py",
		"/home/felipe/Documents/ProjetoCebeci/results/calculadora.f90",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene150_071_400_Ce2temperature.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/ResultadosGeraisGenetic2temperature.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene1020_071_400_Ce2temperature.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene640_071_400_Ce2temperature.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/ResultadosGeraisGenetic.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/ResultadosGeraisOrtodoxos.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene640_0025_400_Ce2temperature.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene395_10_400_Ce2temperature.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene395_0025_400_Ce2temperature.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/ResultadosPrtFixoIdealVs26.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/ResultadosGeraisdoublePrt.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/ResultadosGeraisGeneticmolecular.txt",
		"/home/felipe/Downloads/f03gl/plotfunc.f90",
		"/home/felipe/Documents/ProjetoCebeci/otimization.f90",
		"/home/felipe/Documents/ProjetoCebeci/results/graficos/image1020._400_Avelocity.txt",
		"/home/felipe/Documents/ProjetoCebeci/DNS/DNS_RE_150.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/graficos/images/Temperature_150_071_classico.png",
		"/home/felipe/Documents/ProjetoCebeci/results/graficos/temp.py",
		"/home/felipe/Documents/ProjetoCebeci/DNS/Prt_RE_640_0025.txt",
		"/home/felipe/Documents/ProjetoCebeci/DNS/Prt_RE_395_0025.txt",
		"/home/felipe/Documents/ProjetoCebeci/DNS/Prt_RE_395_071.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/graficos/image 395._10.00_400_Prt(Ret)_A26.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/graficos/image 395._10.00_400_classico.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene395_10_400_Cefisico.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene150_071_400.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene395_0025_400_Cefisico.txt",
		"/home/felipe/Documents/amr3d-paralelo/input/energy.amr3d",
		"/home/felipe/Downloads/install_prerequisites_ubuntu.sh",
		"/home/felipe/.bashrc",
		"/home/felipe/.Xauthority",
		"/home/felipe/.xsession-errors",
		"/home/felipe/.config/Code/CachedData/493869ee8e8a846b0855873886fc79d480d342de/unixTerminal-4f0baab02c5eb176b18157b9177d7a58.code",
		"/usr/share/applications/sublime.desktop",
		"/usr/share/applications/nautilus-classic.desktop",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene1020_071_400.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene150_0025_400.txt",
		"/home/felipe/Documents/ProjetoCebeci/plot/plot_001.png",
		"/home/felipe/Documents/ProjetoCebeci/Resultados.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene395_0025_400_CeSolto.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene395_10_400_CeSolto.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene395_071_400.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/ResultadosGeraisModelados.txt",
		"/home/felipe/Downloads/SnakePy-master/snake.py",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene395_10_400.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene640_071_400.txt",
		"/home/felipe/Documents/ProjetoCebeci/.gitignore",
		"/home/felipe/Documents/ProjetoCebeci/grafics.py",
		"/home/felipe/Documents/ProjetoCebeci/results/ajustecebeciclassico.py",
		"/home/felipe/Documents/ProjetoCebeci/referencias/ED/diferentialevolution.f90",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene1020_071_100.txt",
		"/home/felipe/Documents/ProjetoCebeci/referencias/ED/python/scipy-1.1.0/scipy/optimize/_differentialevolution.py",
		"/home/felipe/Documents/ProjetoCebeci/referencias/ED/python/Exemplo.py",
		"/home/felipe/Documents/ProjetoCebeci/referencias/ED/Rosen.txt",
		"/home/felipe/Documents/ProjetoCebeci/referencias/ED/python/scipy-1.1.0/doc/source/_static/scipy-mathjax/MathJax.js",
		"/home/felipe/Documents/ProjetoCebeci/referencias/ED/python/scipy-1.1.0/setup.py"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 109.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"assimilation",
			"len",
			"LEN",
			"LEN =",
			"intent",
			"print",
			"time_",
			"print",
			"navier",
			"slee",
			"step",
			"max",
			"nu",
			"glut",
			"gltu",
			"display",
			"print",
			"go",
			"tempo",
			"glutmainloop",
			"Init",
			"GL_TRUE",
			"end",
			"end module",
			"x(2)",
			"call getcwd",
			"open(10, *)",
			"print",
			"RP",
			"T",
			"T(",
			"f ",
			"Tdns",
			"print",
			"chara",
			"temp",
			"print",
			"write",
			"inport",
			"pr",
			"player",
			"player1",
			"player",
			"X"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"rYY"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Teorico/src/main3.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24835,
						"regions":
						{
						},
						"selection":
						[
							[
								2108,
								2108
							]
						],
						"settings":
						{
							"auto_name": "program cavidade",
							"syntax": "Packages/MinimalFortran/MinimalFortran.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3392.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Teorico/src/visualization.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15196,
						"regions":
						{
						},
						"selection":
						[
							[
								8837,
								8837
							]
						],
						"settings":
						{
							"syntax": "Packages/MinimalFortran/MinimalFortran.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2886.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Teorico/src/blender.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3030,
						"regions":
						{
						},
						"selection":
						[
							[
								1510,
								1510
							]
						],
						"settings":
						{
							"syntax": "Packages/MinimalFortran/MinimalFortran.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 429.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Teorico/Tento/OpenGl/expe.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5906,
						"regions":
						{
						},
						"selection":
						[
							[
								1405,
								1405
							]
						],
						"settings":
						{
							"syntax": "Packages/MinimalFortran/MinimalFortran.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Teorico/src/main_4/main.F90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22425,
						"regions":
						{
						},
						"selection":
						[
							[
								3718,
								3718
							]
						],
						"settings":
						{
							"syntax": "Packages/MinimalFortran/MinimalFortran.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Teorico/src/main_4/simulation.F90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7758,
						"regions":
						{
						},
						"selection":
						[
							[
								5423,
								5423
							]
						],
						"settings":
						{
							"syntax": "Packages/MinimalFortran/MinimalFortran.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 179.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "Teorico/src/main_4/visualization.F90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7701,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/MinimalFortran/MinimalFortran.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "Teorico/src/main_4/parallel_simu.F90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2281,
						"regions":
						{
						},
						"selection":
						[
							[
								1753,
								1753
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/MinimalFortran/MinimalFortran.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 55.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 120.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "projeto_rayleigh.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"grafics.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Downloads/16_Games/GAMES_CPP.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 266.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
