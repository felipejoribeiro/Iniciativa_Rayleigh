{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Typ",
				"Type_of_visualization"
			],
			[
				"tYPE",
				"Type_of_visualization"
			],
			[
				"w",
				"type_Wall"
			],
			[
				"pre",
				"pressure_step"
			],
			[
				"do",
				"do"
			],
			[
				"velocity",
				"velocity_solver"
			],
			[
				"time",
				"time_steps"
			],
			[
				"P",
				"P"
			],
			[
				"in",
				"increment"
			],
			[
				"u",
				"u"
			],
			[
				"Ny",
				"Ny"
			],
			[
				"Nx",
				"Nx"
			],
			[
				"Type",
				"type_Wall"
			],
			[
				"c",
				"cell"
			],
			[
				"window",
				"Windows_name"
			],
			[
				"i",
				"i"
			],
			[
				"v",
				"v"
			],
			[
				"ii",
				"ii"
			],
			[
				"d",
				"dBuffer"
			],
			[
				"flag",
				"FLAG"
			],
			[
				"sub",
				"subroutine"
			],
			[
				"mod",
				"module"
			],
			[
				"er",
				"erro"
			],
			[
				"ee",
				"ee"
			],
			[
				"linear",
				"linear_e1"
			],
			[
				"tm",
				"temperatura"
			],
			[
				"T",
				"T"
			],
			[
				"font",
				"fontsize"
			],
			[
				"criar",
				"CriarImagem"
			],
			[
				"file",
				"file_path"
			],
			[
				"data_",
				"data_Rosen"
			],
			[
				"valor",
				"valorInicial"
			],
			[
				"z",
				"zPrandtl"
			],
			[
				"Re",
				"Ret"
			],
			[
				"ios",
				"iostream\tstandard header"
			],
			[
				"math",
				"math.h\tstandard header (deprecated)"
			],
			[
				"L",
				"L2"
			],
			[
				"parame",
				"Parameters"
			],
			[
				"L2",
				"L2norm"
			],
			[
				"DNS",
				"DNSinput"
			],
			[
				"Prandtl",
				"Prandtlvector"
			],
			[
				"prandtl",
				"prandtll"
			],
			[
				"p",
				"p"
			],
			[
				"adeq",
				"adequa"
			],
			[
				"N",
				"N"
			],
			[
				"incre",
				"inccrelog"
			],
			[
				"G",
				"GetScale"
			],
			[
				"Get",
				"GetVelocity"
			],
			[
				"dra",
				"drawPlayer"
			],
			[
				"draw",
				"drawWalls"
			],
			[
				"Reset",
				"ResetScale"
			],
			[
				"M",
				"MenuIniciar"
			],
			[
				"string",
				"string.h\tstandard header (deprecated)"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "! Program for de bidimensional simulation of a cavity system, using MPI for parallel processing and OPENGL for graphics\n! Undergraduate: Felipe J. O. Ribeiro\n! Professor: Aristeu da Silveira Neto\n! It is necessary the presence in the same directory of the file visalization.f90\n\ninclude 'visualization.f90'  !Graphical codes\n\n!Main module for global variables\nModule global\n    use mpi\n    implicit none\n\n    !Definition of Cell Data type:\n    type Cell\n        double precision:: T , Ti                      !Temperature variables\n        double precision:: P , Pi , Pl                 !Double precision\n        double precision:: v , u , vl , ul             !velocities variables\n        double precision:: dx , dy                     !Size variables\n        double precision:: x , y                       !Absolute coordinates location\n        double precision:: alpha , nu , rho            !Local physical variables\n        double precision:: div                         !Divergent of velocity in this cell\n        LOGICAL:: Wall                                 !Is Wall?\n        integer:: type_Wall                            !What type of wall?\n                                !1 ----> (velocity: dirichlet = (u-0 , v-0), Temperature: Neumann = 0 , Preassure: Neumann = 0)\n                                !2 ----> (velocity: dirichlet = (u-ui , v-vi), Temperature: Neumann = 0 , Preassure: Neumann = 0)\n    end type cell\n\n    !Other global parameters\n    integer:: Nx , Ny                                              !Space discretization\n    integer:: i , ii , iii                                         !Integer counters\n    integer:: step , pressure_step , velo_step                     !Number of iterations in simulation\n    double precision:: Lx , Ly , dx , dy                           !Geometry of the space domain\n    double precision:: alpha , nu , rho , gx , gy                  !physical variables\n    double precision:: vi , ui , pi , Ti , Reynolds, V_top         !Initial condition variables\n    double precision:: time , dt , cfl , increment                 !Convergence variables\n    type(Cell), dimension(:,:) , allocatable :: C                  !Temperature and extra matrix\n    double precision, dimension(:,:) , allocatable :: tr           !Transition variable\n    character*100:: dirname , filename                             !Names for file creation and directory structure\n    Logical:: save_image , Exist_Thermal_simulation                !Simulation options\n    integer:: what_thermal_simulation, what_velocity_simulation &  !Simulation options\n            , image_frequence\n    integer :: ERROR , numprocs, ID                                !MPI integers\n    integer :: Type_of_visualization                               !Type of visualization\n\nend module global\n\n\n\n\n\n\n!Main program, responsible for distributin mpi jobs\nprogram cavidade\n    use global                                                     !Library for global variables\n    use mpi                                                        !Library for MPI usage\n    implicit none\n\n    call MPI_INIT(ERROR)                                           !Initiate MPI capabilities\n    call MPI_COMM_RANK(MPI_COMM_WORLD, ID , ERROR)                 !Asks for the number of identity of the process\n    call MPI_COMM_SIZE(MPI_COMM_WORLD, numprocs, ERROR)            !Asks for the total number of affiliated processes\n\n\n\n    if (numprocs == 2)then                                         !Check if there is two processes\n        if(ID == 0)then\n            call Simulation()                                      !Down the code, the simulation routine\n        else\n            call Visualization()                                   !In other file\n        end if\n    else if(numprocs == 1)then                                     !Down the code, the simulation routine\n        call Simulation()\n    end if\n\n\n\n    call MPI_FINALIZE(ERROR)                                       !End all MPI capabilities\n\n\nend program cavidade\n\n\n\n\n\n\n\n!Routine for the simulation\nsubroutine Simulation()\n    use global\n    use mpi\n    implicit none\n    character*200 :: windows_name                                  !Name of the window\n\n    !Parameters of the simulation:\n    Nx = 68                                                        !Space cells in x direction\n    Ny = Nx                                                        !Space cells in y direction\n    Lx = 1.d0                                                      !Size of space domain in x  (m)\n    Ly = Lx                                                        !Size of space domain in y  (m)\n    dx =  Lx / (Nx)                                                !Cells length in x (m)\n    dy =  Ly / (Ny)                                                !Cells length in y (m)\n    !Physical determination of fluid flow:\n    alpha =  1.43d-7                                               !Thermal condutivity (water with 25 degree Celcius) (m**2/s)\n    nu = 8.891d-4                                                  !viscosity (water with 25 degree Celcius) (n*s/m**2) (https://www.engineeringtoolbox.com/water-dynamic-kinematic-viscosity-d_596.html)\n    rho = 997.7d0                                                  !Specific mass (water with 25 degree Celcius) (N/m**3)\n    V_top = 0.0008d0                                                 !Velocity of top plate\n    Reynolds = V_top*Lx/8.917d-7                                   !Reynolds number\n    gx = 0.d0                                                      !Gravity in x direction (m/s**2)\n    gy  = 0.0d0                                                    !Gravity in y direction (m/s**2) (http://lilith.fisica.ufmg.br/~dsoares/g/g.htm)\n    vi = 0.0d0                                                     !Initial condition parameter for vertical velocity\n    ui = 0.0d0                                                     !Initial condition parameter for horizontal velocity\n    pi = 0.0d0                                                     !Initial condition parameter for preassure\n    ti = 24.0d0                                                    !Initial condition parameter for temperature\n    !Simulation convergence parameters:\n    cfl = 0.1                                                      !Relation betwen time and space steps\n    dt = 0001 ! (cfl * dx**2 )/ alpha                          !Time step length (s)\n    time = 2500                                                      !Total time of simulation (s)\n    increment = 1.d-10                                             !Increment for implicity Gaus-Seidel solutions\n    !Simulation Pannel control:\n    save_image = .FALSE.                                           !Save file is wanted?\n    image_frequence = 100                                          !In how many iterations the image must be saved?\n    filename = \"simulacao_piloto\"                                  !Name of saved file\n    Windows_name = \"Program Cavidade\"                              !Name of the window of graphical representation\n    what_thermal_simulation = 2                                    !Type of thermal numerical solution (1 = explicit / 2 = implicit)\n    Exist_Thermal_simulation = .FALSE.                             !If there is thermal simulation, or isotermic hipotesis\n    what_velocity_simulation = 2                                   !Type of velocity numerical solution (1 = explicit / 2 = implicit)\n    Type_of_visualization = 2                                      !Type og graphics in the screen from simulation\n\n\n    !Data from the present simulation\n    Print*, \"Simulation \" , filename\n    Print*, \"Reynolds = \" , Reynolds\n\n\n    !First Contact with visualization process, for initial parametrization and window creation.\n    call MPI_SEND( Nx  , 1 , MPI_INTEGER , 1 , 1 , MPI_COMM_WORLD , ERROR)                        !Size of simulation data buffer in x\n    call MPI_SEND( Ny  , 1 , MPI_INTEGER , 1 , 0 , MPI_COMM_WORLD , ERROR)                        !Size of simulation data buffer in y\n    call MPI_SEND( Windows_name  , 200 , MPI_CHARACTER, 1 , 1 , MPI_COMM_WORLD , ERROR)           !Name of the window of visualization\n    call MPI_SEND( Type_of_visualization  , 1 , MPI_INTEGER, 1 , 0 , MPI_COMM_WORLD , ERROR)      !Name of the window of visualization\n\n\n    !Allocation of simulations buffers:\n    allocate(C(Nx + 2  , Ny + 2))                                  !   1 extra cell   |wall|      N cells      |wall| 1 extra cell\n    allocate(tr(Nx + 2  , Ny + 2))\n\n\n    !Simulation Routines:\n\n     call Simu_routines()                                          !The protocolls are called for simulation development\n\n    !Simulation Statistics:\n\n    print*, \"------------------------------------------------------\"\n    print*, \"-                                                    -\"\n    print*, \"-                  Fim da simulação                  -\"\n    print*, \"-                                                    -\"\n    print*, \"------------------------------------------------------\"\n\n    !Dellocation of simulations buffers:\n    deallocate(C)\n    deallocate(tr)\n\nend subroutine simulation\n\n\n\n\n\n!Simulation center of routines:\nsubroutine Simu_routines()\n    use global\n    implicit none\n\n    call initialconditions()                                       !Create the initial condition for the simulation\n\n    call time_steps()                                              !Initiate time iterations\n\n    if(save_image)then\n        call save_this_image()                                     !Save image in non volitile memory.\n    end if\n\nend subroutine Simu_routines\n\n\n\n\n\n!Set initial values for all the domain and simulation values\nsubroutine initialconditions()\n    use mpi\n    use global\n    implicit none\n\n    !Geometric topologicall determination (is wall ?)\n    do i = 1 , Nx + 2\n        do ii = 1 , Ny + 2\n\n            if ( (i == 1 .or. ii == 1 .or. i == Nx + 2 ) .and. ii /= Ny + 2)then\n                C(i , ii)%Wall = .True.\n                C(i , ii)%type_Wall = 1\n            else if(ii == Ny + 2)then\n                C(i , ii)%Wall = .True.\n                C(i , ii)%type_Wall = 2\n            else\n                C(i , ii)%Wall = .False.\n            end if\n\n        end do\n    end do\n\n    !Initial phisicall considerations:\n    do i = 1 , Nx + 2\n        do ii = 1 , Ny + 2\n\n            if ( (C(i , ii)%Wall .eqv. .False. ) .and. i < Ny/2)then\n                !Determinations for all the physicall domain\n\n                C(i , ii)%u = ui\n                C(i , ii)%v = vi\n                C(i , ii)%P = pi\n                C(i , ii)%T = ti\n                C(i , ii)%dx = dx\n                C(i , ii)%dy = dy\n                C(i , ii)%alpha = alpha\n                C(i , ii)%nu = nu\n                C(i , ii)%rho = rho\n\n            else if(C(i , ii)%Wall .eqv. .False. )then\n\n                C(i , ii)%u = 0.0d0\n                C(i , ii)%v = 0.0d0\n                C(i , ii)%P = pi\n                C(i , ii)%T = ti\n                C(i , ii)%dx = dx\n                C(i , ii)%dy = dy\n                C(i , ii)%alpha = alpha\n                C(i , ii)%nu = nu\n                C(i , ii)%rho = rho\n\n            end if\n\n        end do\n    end do\n\n\n    !Initial condition exibition:\n\n    call MPI_SEND( DBLE(C%type_Wall)  , size(C%type_Wall) , MPI_DOUBLE_PRECISION , 1 , 1 , MPI_COMM_WORLD , ERROR)\n    call MPI_SEND( DBLE(C%P)  , size(C%type_Wall) , MPI_DOUBLE_PRECISION , 1 , 1 , MPI_COMM_WORLD , ERROR)\n    call MPI_SEND( DBLE(C%v)  , size(C%type_Wall) , MPI_DOUBLE_PRECISION , 1 , 1 , MPI_COMM_WORLD , ERROR)\n    call MPI_SEND( DBLE(C%u)  , size(C%type_Wall) , MPI_DOUBLE_PRECISION , 1 , 1 , MPI_COMM_WORLD , ERROR)\n    call sleep(1)\n\nend subroutine initialconditions\n\n\n\n\n\nsubroutine time_steps()\n    use global\n    implicit none\n\n    !initiate simulation loop\n    step = 1\n    do while(step * dt < time - dt)\n\n\n        call boundary_conditions()                                 !Set boundary conditions\n        call velocity_solver()                                     !Solve the velocity field\n\n        call divergent_calculator()                                !Calcule the divergent of the velocity domain\n        call preassure_definition()                                !Simulate preassure of the next step\n        call velocity_corrector()                                  !Correct the velocity with the preassure simulated\n        call divergent_calculator()                                !Calcule the divergent of the velocity domain\n        call preassure_atualization()                              !Calculate the preassure of new step\n\n\n        !At final of a step\n        print*, \"depois da pressao --->\" , MAXVAL(C%div) , pressure_step , velo_step , MAXVAL(C%P)\n        call MPI_SEND( DBLE(C%u)  , size(C%type_Wall) , MPI_DOUBLE_PRECISION , 1 , 1 , MPI_COMM_WORLD , ERROR)\n        call MPI_SEND( DBLE(C%v)  , size(C%type_Wall) , MPI_DOUBLE_PRECISION , 1 , 1 , MPI_COMM_WORLD , ERROR)\n        call MPI_SEND( DBLE(C%P)  , size(C%type_Wall) , MPI_DOUBLE_PRECISION , 1 , 1 , MPI_COMM_WORLD , ERROR)\n        call MPI_SEND( DBLE(C%div)  , size(C%type_Wall) , MPI_DOUBLE_PRECISION , 1 , 1 , MPI_COMM_WORLD , ERROR)\n        step = step + 1\n\n    end do\n\nend subroutine time_steps\n\n\n\n\n\n\nsubroutine boundary_conditions()\n    use global\n    implicit none\n    !Boundary conditions\n        do i = 1 , Ny + 2\n            !Preassure on all the walss\n            C(Nx + 2 , i)%P  =  C(Nx + 1, i)%P     !>\n            C(1     , i)%P     =  C(2 , i)%P       !<\n\n            C(1     , i)%v = - C(2     , i)%v\n            C(Nx+2   , i)%v = - C(Nx+1   , i)%v\n            C(1     , i)%vl = - C(2     , i)%vl\n            C(Nx+2   , i)%vl = - C(Nx+1   , i)%vl\n\n            C(1     , i)%u = 0\n            C(2     , i)%u = 0\n            C(Nx+2   , i)%u = 0\n            C(1     , i)%ul = 0\n            C(2     , i)%ul = 0\n            C(Nx+2   , i)%ul = 0\n        end do\n\n\n\n        do i = 1 , Nx + 2\n            C(i , Ny + 2)%P =  C(i , Ny  + 1)%P\n            C(i , 1    )%P =  C(i , 2     )%P\n\n            C(i , 1    )%v = 0\n            C(i , 2    )%v = 0\n            C(i , Ny + 2)%v = 0\n            C(i , 1    )%vl = 0\n            C(i , 2    )%vl = 0\n            C(i , Ny + 2)%vl = 0\n\n            C(i , 1    )%u = -C(i , 2     )%u\n            C(i , Ny + 2)%u = 2 * V_top  - C(i , Ny + 1)%u\n            C(i , 1    )%ul = -C(i , 2     )%ul\n            C(i , Ny + 2)%ul = 2 * V_top - C(i , Ny + 1)%ul\n        end do\n\nend subroutine boundary_conditions\n\n\n\n\n\nsubroutine velocity_solver()\n    use global\n    implicit none\n\n    if(what_velocity_simulation == 2)then\n    ! IMPLICITY SOLVER\n    print*, \"implicit\"\n\n        !Initial value\n        do i = 2 , Nx + 1\n            do ii = 2 , Ny + 1\n\n                C(i , ii)%ul = 0\n                C(i , ii)%vl = 0\n\n            end do\n        end do\n\n        velo_step = 0\n\n        !Implicit preassure line creation\n        C(3, 3)%div = 10\n        C(3, 3)%nu = 10\n        do while( MAXVAL(C%div) > increment .or. MAXVAL(C%nu) > increment)\n\n            do i = 2 , Nx + 1\n                do ii = 2 , Ny + 1\n\n                    C(i, ii)%div = C(i, ii)%ul      !div é utilizado para se ver o incremento da velocidade\n                    C(i, ii)%nu = C(i, ii)%vl       !Nu é utilizado para se ver o incremento da velocidade\n\n                end do\n            end do\n\n            do i = 3 , Nx + 1\n                do ii = 2 , Ny + 1\n\n                    C(i, ii)%ul = (C(i , ii)%u * (C(i , ii)%dx ** 2) *(C(i , ii)%dy ** 2))/((C(i , ii)%dx ** 2) * &\n                        (C(i , ii)%dy ** 2) + 2 * nu * dt *( (C(i , ii)%dy ** 2) + (C(i , ii)%dx ** 2) ) ) &\n                        - ( (   &\n                            ((C(i , ii)%v + C(i - 1 , ii)%v  + C(i , ii + 1)%v  + C(i - 1, ii + 1)%v )/4)&\n                            * (C(i , ii)%dx ** 2) *(C(i , ii)%dy) * dt)/( 2 * (C(i , ii)%dx ** 2) * &\n                        (C(i , ii)%dy ** 2) + 4 * nu * dt *( (C(i , ii)%dx ** 2) + (C(i , ii)%dy ** 2) ) ) ) * &\n                        (C(i , ii + 1)%u - C(i , ii - 1)%u ) &\n                        - ( (C(i , ii)%u * (C(i , ii)%dx) *(C(i , ii)%dy**2) * dt)/( 2 * (C(i , ii)%dx ** 2) * &\n                        (C(i , ii)%dy ** 2) + 4 * nu * dt *( (C(i , ii)%dx ** 2) + (C(i , ii)%dy ** 2) ) ) )  *&\n                        (C(i + 1, ii)%u - C(i - 1 , ii)%u ) &\n                        - ( ( (C(i , ii)%dx) *(C(i , ii)%dy**2) * dt)/( rho * (C(i , ii)%dx ** 2) * &\n                        (C(i , ii)%dy ** 2) + 2 * rho * nu * dt *( (C(i , ii)%dx ** 2) + (C(i , ii)%dy ** 2) ) ) )*&\n                        (C(i , ii)%P - C(i - 1, ii)%P) &\n                        +( ( (C(i , ii)%dx ** 2) *(C(i , ii)%dy**2) * dt * (C(i,ii)%rho - rho) * gx)/( rho * &\n                            (C(i , ii)%dx ** 2) * &\n                        (C(i , ii)%dy ** 2) + 2 * rho * nu * dt *( (C(i , ii)%dx ** 2) + (C(i , ii)%dy ** 2) ) ) )&\n                        + ( ( nu *(C(i , ii)%dy**2) * dt)/( (C(i , ii)%dx ** 2) * &\n                        (C(i , ii)%dy ** 2) + 2 * nu * dt *( (C(i , ii)%dx ** 2) + (C(i , ii)%dy ** 2) ) ) )*&\n                        (C(i + 1, ii)%ul + C(i - 1, ii)%ul)&\n                        + ( ( nu *(C(i , ii)%dx**2) * dt)/( (C(i , ii)%dx ** 2) * &\n                        (C(i , ii)%dy ** 2) + 2 * nu * dt *( (C(i , ii)%dx ** 2) + (C(i , ii)%dy ** 2) ) ) )*&\n                        (C(i , ii + 1)%ul + C(i, ii - 1)%ul)\n                end do\n            end do\n\n            call boundary_conditions()\n\n            do i = 2 , Nx + 1\n                do ii = 3 , Ny + 1\n                    C(i, ii)%vl = (C(i , ii)%v * (C(i , ii)%dx ** 2) *(C(i , ii)%dy ** 2))/((C(i , ii)%dx ** 2) * &\n                        (C(i , ii)%dy ** 2) + 2 * nu * dt *( (C(i , ii)%dy ** 2) + (C(i , ii)%dx ** 2) ) ) &\n                        - ( (C(i , ii)%v * (C(i , ii)%dx ** 2) *(C(i , ii)%dy) * dt)/( 2 * (C(i , ii)%dx ** 2) * &\n                        (C(i , ii)%dy ** 2) + 4 * nu * dt *( (C(i , ii)%dx ** 2) + (C(i , ii)%dy ** 2) ) ) ) * &\n                        (C(i , ii + 1)%v - C(i , ii - 1)%v ) &\n                        - ( ( &\n                            (C(i , ii)%u + C(i , ii - 1)%u + C(i + 1, ii)%u + C(i + 1 , ii - 1)%u)/4 &\n                                * (C(i , ii)%dx) *(C(i , ii)%dy**2) * dt)/( 2 * (C(i , ii)%dx ** 2) * &\n                        (C(i , ii)%dy ** 2) + 4 * nu * dt *( (C(i , ii)%dx ** 2) + (C(i , ii)%dy ** 2) ) ) )  *&\n                        (C(i + 1, ii)%v - C(i - 1 , ii)%v ) &\n                        - ( ( (C(i , ii)%dx**2) *(C(i , ii)%dy) * dt)/( rho * (C(i , ii)%dx ** 2) * &\n                        (C(i , ii)%dy ** 2) + 2 * rho * nu * dt *( (C(i , ii)%dx ** 2) + (C(i , ii)%dy ** 2) ) ) )*&\n                        (C(i , ii)%P - C(i, ii - 1)%P) &\n                        +( ( (C(i , ii)%dx ** 2) *(C(i , ii)%dy**2) * dt * (C(i,ii)%rho - rho) * gy)/( rho * &\n                            (C(i , ii)%dx ** 2) * &\n                        (C(i , ii)%dy ** 2) + 2 * rho * nu * dt *( (C(i , ii)%dx ** 2) + (C(i , ii)%dy ** 2) ) ) )&\n                        + ( ( nu *(C(i , ii)%dy**2) * dt)/( (C(i , ii)%dx ** 2) * &\n                        (C(i , ii)%dy ** 2) + 2 * nu * dt *( (C(i , ii)%dx ** 2) + (C(i , ii)%dy ** 2) ) ) )*&\n                        (C(i + 1, ii)%vl + C(i - 1, ii)%vl)&\n                        + ( ( nu *(C(i , ii)%dy**2) * dt)/( (C(i , ii)%dx ** 2) * &\n                        (C(i , ii)%dy ** 2) + 2 * nu * dt *( (C(i , ii)%dx ** 2) + (C(i , ii)%dy ** 2) ) ) )*&\n                        (C(i , ii + 1)%vl + C(i , ii - 1)%vl)\n\n                end do\n            end do\n\n            call boundary_conditions()\n\n            velo_step = velo_step + 1\n\n            do i = 2 , Nx + 1\n                do ii = 2 , Ny + 1\n\n                    C(i, ii)%div = abs ( C(i, ii)%div - C(i, ii)%ul )\n                    C(i, ii)%nu = abs ( C(i, ii)%nu - C(i, ii)%vl )\n\n                end do\n            end do\n\n        end do\n\n        print*, C(2 , 2)%vl , C(2 , 3)%vl , C(2 , 4)%vl , C(2 , 5)%vl\n\n    else if(what_velocity_simulation == 1)then\n    !EXPLICIT SOLVER\n    print*, \"explicit\"\n\n        do i = 3 , Nx + 1\n            do ii = 2 , Ny + 1\n\n                C(i , ii)%ul = C(i, ii)%u &\n                    - C(i, ii)%u * ((dt)/(C(i,ii)%dx)) *(C(i+1, ii)%u - C(i, ii)%u) &\n                    - ( C(i , ii)%v + C(i - 1 , ii)%v  + C(i , ii + 1)%v  + C(i - 1, ii + 1)%v )/4 &\n                    * ((dt)/(C(i,ii)%dy)) *(C(i, ii + 1)%u - C(i, ii)%u)&\n                    - ((dt)/(rho * C(i,ii)%dx )) * (C(i , ii)%P - C(i - 1 , ii)%P)&\n                    + dt * gx * (C(i,ii)%rho - rho)/(rho) &\n                    + (nu * dt / (C(i,ii)%dx ** 2) ) * (C(i+1, ii)%u - 2 * C(i , ii)%u + C(i-1, ii)%u) &\n                    + (nu * dt / (C(i,ii)%dy ** 2) ) * (C(i, ii+ 1)%u - 2 * C(i , ii)%u + C(i, ii-1)%u)\n            end do\n        end do\n\n        call boundary_conditions()\n\n        do i = 2 , Nx + 1\n            do ii = 3 , Ny + 1\n                C(i , ii)%vl = C(i, ii)%v &\n                    - (C(i , ii)%u + C(i , ii - 1)%u + C(i + 1, ii)%u + C(i + 1 , ii - 1)%u)/4 &\n                    * ((dt)/(C(i,ii)%dx)) *(C(i+1, ii)%v - C(i, ii)%v) &\n                    - C(i, ii)%v * ((dt)/(C(i,ii)%dy)) *(C(i, ii + 1)%v - C(i, ii)%v) &\n                    - ((dt)/(rho * C(i,ii)%dy)) * (C(i , ii)%P - C(i , ii - 1)%P)&\n                    + dt * gy * (C(i , ii)%rho - rho)/(rho) &\n                    + (nu * dt / (C(i , ii)%dx ** 2) ) * (C(i+1, ii)%v - 2 * C(i , ii)%v + C(i-1, ii)%v) &\n                    + (nu * dt / (C(i , ii)%dy ** 2) ) * (C(i, ii+ 1)%v - 2 * C(i , ii)%v + C(i, ii-1)%v)\n\n            end do\n        end do\n\n        call boundary_conditions()\n\n    end if\n\nend subroutine velocity_solver\n\n\n\n\n\n\nsubroutine preassure_definition()\n    use global\n    implicit none\n\n    !Pressure initial gaus saidel value (zero)\n    do i = 2 , Nx + 1\n        do ii = 2 , Ny + 1\n\n                C(i , ii)%Pl = 0\n\n        end do\n    end do\n    pressure_step = 0\n\n    !Implicit preassure line creation\n    C(3, 3)%div = 10\n    do while( MAXVAL(C%div) > increment)\n\n        do i = 2 , Nx + 1\n            do ii = 2 , Ny + 1\n\n                C(i, ii)%div = C(i, ii)%Pl\n\n            end do\n        end do\n\n        do i = 2 , Nx + 1\n            do ii = 2 , Ny + 1\n\n                C(i, ii)%Pl = -1 * ( (rho * C(i , ii)%dx * C(i , ii)%dy**2)/(2 * (C(i , ii)%dx**2 + C(i , ii)%dy**2) * dt )) &\n                * ( C(i + 1, ii)%ul - C(i, ii)%ul) &\n                -1 * ( (rho * C(i , ii)%dx**2 * C(i , ii)%dy)/(2 * (C(i , ii)%dx**2 + C(i , ii)%dy**2) * dt )) &\n                * ( C(i, ii+ 1)%vl - C(i, ii)%vl) &\n                + ( (C(i , ii)%dy**2)/ (2 * (C(i , ii)%dx**2 + C(i , ii)%dy**2)))*( C(i + 1, ii)%Pl + C(i - 1, ii)%Pl) &\n                + ( (C(i , ii)%dx**2)/ (2 * (C(i , ii)%dx**2 + C(i , ii)%dy**2)))*( C(i, ii + 1)%Pl + C(i, ii - 1)%Pl)\n\n            end do\n        end do\n\n        call boundary_conditions()\n\n        pressure_step = pressure_step + 1\n\n        C(Nx / 2, Ny / 2)%Pl = 0;\n\n        do i = 2 , Nx + 1\n            do ii = 2 , Ny + 1\n\n                C(i, ii)%div = abs ( C(i, ii)%div - C(i, ii)%Pl )\n\n            end do\n        end do\n    end do\n\nend subroutine preassure_definition\n\n\n\n\n\n\nsubroutine velocity_corrector()\n    use global\n    implicit none\n\n    do i = 3 , Nx + 1\n        do ii = 2 , Ny + 1\n\n                C(i , ii)%u = C(i , ii)%ul - (dt/(C(i , ii)%dx * rho)) * (C(i , ii)%Pl - C(i - 1 , ii)%Pl)\n\n        end do\n    end do\n\n\n    do i = 2 , Nx + 1\n        do ii = 3 , Ny + 1\n\n                C(i , ii)%v =  C(i , ii)%vl - (dt/(C(i , ii)%dy * rho)) * (C(i , ii)%Pl - C(i , ii - 1)%Pl)\n\n        end do\n    end do\n\n    print*, C(2 , 2)%v , C(2 , 3)%v , C(2 , 4)%v , C(2 , 5)%v\n\nend subroutine velocity_corrector\n\n\n\n\n\nsubroutine divergent_calculator()\n    use global\n    implicit none\n\n    do i = 2 , Nx + 1\n        do ii = 2 , Ny + 1\n\n            C(i , ii)%div = (C(i + 1 , ii)%u - C(i , ii)%u)/ C(i , ii)%dx + (C(i , ii + 1)%v - C(i, ii)%v)/ C(i , ii)%dy\n\n        end do\n    end do\n\nend subroutine divergent_calculator\n\n\n\n\n\n\nsubroutine preassure_atualization()\n    use global\n    implicit none\n\n\n    !Pressure atualization\n    do i = 2 , Nx + 1\n        do ii = 2 , Ny + 1\n\n            C(i , ii)%P = C(i , ii)%Pl +  C(i , ii)%P\n\n        end do\n    end do\n\n\nend subroutine preassure_atualization\n\n\n\n\n\n\nsubroutine save_this_image()\n    implicit none\nend subroutine save_this_image",
			"file": "Teorico/src/main3.f90",
			"file_size": 24455,
			"file_write_time": 132155268344707260,
			"settings":
			{
				"buffer_size": 24451,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "program cavidade"
			}
		},
		{
			"file": "Teorico/src/visualization.f90",
			"settings":
			{
				"buffer_size": 10883,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Teorico/src/main.f90",
			"settings":
			{
				"buffer_size": 14973,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Teorico/Tento/OpenGl/mouse_bola_pinga.cpp",
			"settings":
			{
				"buffer_size": 7804,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "/*"
			}
		},
		{
			"file": "Teorico/Tento/OpenGl/piloto.c",
			"settings":
			{
				"buffer_size": 3498,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/felipe/Trabalho/ProjetoCebeci/genetic_fit.f90",
			"settings":
			{
				"buffer_size": 27015,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/epta_sta_cpp.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/mpi2winfort.sublime-build",
					""
				],
				[
					"Packages/User/OpenGlf90.sublime-build",
					""
				]
			],
			[
				"Packages/User/OpenGlf90.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/mpi2winfort.sublime-build",
					""
				],
				[
					"Packages/User/OpenGlf90.sublime-build",
					""
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/gplusplusPiloto.sublime-build",
					""
				],
				[
					"Packages/User/gplusplusPiloto.sublime-build",
					"Run"
				],
				[
					"Packages/User/multifile.sublime-build",
					""
				],
				[
					"Packages/User/multifile.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/gplusplusPiloto.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/gplusplusPiloto.sublime-build",
					""
				],
				[
					"Packages/User/multifile.sublime-build",
					""
				],
				[
					"Packages/User/multifile.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/gplusplusPiloto.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/multifile.sublime-build",
					""
				],
				[
					"Packages/User/multifile.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/opengl.sublime-build",
					""
				]
			],
			[
				"Packages/User/opengl.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					""
				],
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					"Run"
				]
			],
			[
				"Packages/Fortran/build-systems/GFortran.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					""
				],
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					"Run"
				],
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				]
			],
			[
				"Packages/User/fortran2win.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					""
				],
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					"Run"
				],
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/OpenGlf90.sublime-build",
					""
				]
			],
			[
				"Packages/User/fortran2win.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					""
				],
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					"Run"
				],
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/make_file.sublime-build",
					""
				],
				[
					"Packages/User/OpenGlf90.sublime-build",
					""
				]
			],
			[
				"Packages/User/fortran2win.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					""
				],
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					"Run"
				],
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/make_file.sublime-build",
					""
				],
				[
					"Packages/User/mpi2winfort.sublime-build",
					""
				],
				[
					"Packages/User/OpenGlf90.sublime-build",
					""
				]
			],
			[
				"Packages/User/OpenGlf90.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					""
				],
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					"Run"
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				]
			],
			[
				"Packages/User/fortran2win.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					""
				],
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					"Run"
				],
				[
					"Packages/User/gplusplusPiloto.sublime-build",
					""
				]
			],
			[
				"Packages/Fortran/build-systems/GFortran.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					""
				],
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					"Run"
				],
				[
					"Packages/User/gplusplusPiloto.sublime-build",
					""
				],
				[
					"Packages/User/gplusplusPiloto.sublime-build",
					"Run"
				]
			],
			[
				"Packages/Fortran/build-systems/GFortran.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					""
				],
				[
					"Packages/Fortran/build-systems/GFortran.sublime-build",
					"Run"
				],
				[
					"Packages/User/opengl.sublime-build",
					""
				]
			],
			[
				"Packages/Fortran/build-systems/GFortran.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/MinimalFortran/MinimalFortran.sublime-build",
					""
				],
				[
					"Packages/MinimalFortran/MinimalFortran.sublime-build",
					"Run"
				]
			],
			[
				"Packages/MinimalFortran/MinimalFortran.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/MinimalFortran/MinimalFortran.sublime-build",
					""
				],
				[
					"Packages/MinimalFortran/MinimalFortran.sublime-build",
					"Run"
				],
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/mpi2winfort.sublime-build",
					""
				],
				[
					"Packages/User/OpenGlf90.sublime-build",
					""
				]
			],
			[
				"Packages/User/OpenGlf90.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/MinimalFortran/MinimalFortran.sublime-build",
					""
				],
				[
					"Packages/MinimalFortran/MinimalFortran.sublime-build",
					"Run"
				],
				[
					"Packages/User/fortrandif.sublime-build",
					""
				]
			],
			[
				"Packages/User/fortrandif.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/OpenGlf90.sublime-build",
					""
				],
				[
					"Packages/User/Python2.sublime-build",
					""
				],
				[
					"Packages/User/Python2.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/Python2.sublime-build",
					""
				],
				[
					"Packages/User/Python2.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/make_file.sublime-build",
					""
				],
				[
					"Packages/User/OpenGlf90.sublime-build",
					""
				],
				[
					"Packages/User/Python2.sublime-build",
					""
				],
				[
					"Packages/User/Python2.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/make_file.sublime-build",
					""
				],
				[
					"Packages/User/mpi2winfort.sublime-build",
					""
				],
				[
					"Packages/User/OpenGlf90.sublime-build",
					""
				],
				[
					"Packages/User/Python2.sublime-build",
					""
				],
				[
					"Packages/User/Python2.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/mpi2winfort.sublime-build",
					""
				],
				[
					"Packages/User/OpenGlf90.sublime-build",
					""
				],
				[
					"Packages/User/Python2.sublime-build",
					""
				],
				[
					"Packages/User/Python2.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/User/Python2.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/Python2.sublime-build",
					""
				],
				[
					"Packages/User/Python2.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/User/fortrandif.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/User/opengl.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/make_file.sublime-build",
					""
				],
				[
					"Packages/User/mpi2winfort.sublime-build",
					""
				],
				[
					"Packages/User/OpenGlf90.sublime-build",
					""
				]
			],
			[
				"Packages/User/mpi2winfort.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/epta_sta_cpp.sublime-build",
					""
				],
				[
					"Packages/User/fortran2win.sublime-build",
					""
				],
				[
					"Packages/User/mpi2winfort.sublime-build",
					""
				],
				[
					"Packages/User/OpenGlf90.sublime-build",
					""
				]
			],
			[
				"Packages/User/epta_sta_cpp.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/gplusplusPiloto.sublime-build",
					""
				],
				[
					"Packages/User/gplusplusPiloto.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/gplusplusPiloto.sublime-build",
				"Run"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"package contr",
				"Package Control: Install Package"
			],
			[
				"package",
				"Preferences: Browse Packages"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"prv",
				"PackageResourceViewer: Open Resource"
			],
			[
				"package control install",
				"Package Control: Install Package"
			],
			[
				"packages",
				"PackageResourceViewer: Open Resource"
			],
			[
				"pa",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 86.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/OpenGl"
	],
	"file_history":
	[
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/TEX/presentation.tex",
		"/home/felipe/Downloads/16_Games/16 Asteroids/main.cpp",
		"/home/felipe/Downloads/16_Games/01 Tetris/main.cpp",
		"/home/felipe/.config/sublime-text-3/Packages/User/OpenGlf90.sublime-build",
		"/usr/bin/ld.bfd",
		"/usr/bin/ld",
		"/home/felipe/.config/sublime-text-3/Packages/User/fortran2win.sublime-build",
		"/home/felipe/.config/sublime-text-3/Packages/User/Python2.sublime-build",
		"/home/felipe/Trabalho/ProjetoCebeci/main.f90",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/src/main.f90",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/src/src.f90",
		"/home/felipe/Trabalho/ProjetoCebeci/genetic.f90",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/OpenGl/simple.f90",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/OpenGl/trivial.f90",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/OpenGl/expe.f90",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/OpenGl/flickering_end.f90",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/MPI/mpi1.f90",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_RECAP/OpenGlf90/src/trivial.f90",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/src/update.py",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_RECAP/OpenGlcpp/OpenGlcpp/src/Recap.cpp",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_RECAP/OpenGlcpp/OpenGlcpp/src/Difusion.cpp",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_RECAP/recap.cpp",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_RECAP/Documentation/Notes/Notas.tex",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/OpenGl/blender.f90",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/src/simulation.f90",
		"/home/felipe/.local/share/applications/blender.desktop",
		"/home/felipe/Modelos/blender-2.80-linux-glibc217-x86_64/readme.html",
		"/home/felipe/Modelos/blender-2.80-linux-glibc217-x86_64/blender.desktop",
		"/home/felipe/Downloads/f03gl/glutdino.f90",
		"/home/felipe/Downloads/f03gl/greenbook/Makefile",
		"/home/felipe/Downloads/f03gl/torus.f90",
		"/home/felipe/Downloads/f03gl/sphere.f90",
		"/home/felipe/Downloads/f03gl/olympic3.f90",
		"/home/felipe/Downloads/f03gl/trivial.f90",
		"/home/felipe/Downloads/f03gl/modview.f90",
		"/home/felipe/Trabalho/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/OpenGl/main.f90",
		"/home/felipe/Downloads/f03gl/Makefile",
		"/media/felipe/KINGSTON/arca/sublime/Python2.sublime-build",
		"/home/felipe/.config/sublime-text-3/Packages/User/mpi2winfort.sublime-build",
		"/home/felipe/Documents/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/OpenGl/blender.f90",
		"/home/felipe/Documents/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/MPI/mpi1.f90",
		"/home/felipe/Documents/ProjetoCebeci/teste.f90",
		"/home/felipe/Documents/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/src/main.f90",
		"/home/felipe/Documents/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/src/update.py",
		"/home/felipe/Documents/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/OpenGl/expe.f90",
		"/home/felipe/Documents/ProjetoCebeci/genetic.f90",
		"/home/felipe/Documents/ProjetoCebeci/main.f90",
		"/home/felipe/Documents/ProjetoCebeci/genetic_fit.f90",
		"/home/felipe/Downloads/0007 STRAKE Strakes.geo",
		"/home/felipe/Downloads/f03gl_1.0/f03gl/Makefile",
		"/home/felipe/Downloads/f03gl_1.0/f03gl/bluebook/Makefile",
		"/home/felipe/Downloads/f03gl_1.0/f03gl/blender.f90",
		"/home/felipe/Documents/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/OpenGl/expe",
		"/home/felipe/Documents/Iniciativa_Rayleigh/Project_PressureXVelocity/Teorico/Tento/OpenGl/stars.f90",
		"/home/felipe/Documents/Iniciativa_Rayleigh/Project_RECAP/f03gl/array.f90",
		"/home/felipe/Documents/Iniciativa_Rayleigh/Project_RECAP/f03gl/eps.f90",
		"/home/felipe/Documents/ProjetoCebeci/results/genetic_scatering.py",
		"/home/felipe/Documents/ProjetoCebeci/results/resultados gerais.py",
		"/home/felipe/Documents/ProjetoCebeci/README",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene395_071_400_Ce2temperature.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/plotfit_prt_A.py",
		"/home/felipe/Documents/ProjetoCebeci/results/misc.py",
		"/home/felipe/Desktop/mca/untitled.py",
		"/home/felipe/Documents/ProjetoCebeci/results/graficos/amostras_temperature.py",
		"/home/felipe/Documents/ProjetoCebeci/results/calculadora.f90",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene150_071_400_Ce2temperature.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/ResultadosGeraisGenetic2temperature.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene1020_071_400_Ce2temperature.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene640_071_400_Ce2temperature.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/ResultadosGeraisGenetic.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/ResultadosGeraisOrtodoxos.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene640_0025_400_Ce2temperature.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene395_10_400_Ce2temperature.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene395_0025_400_Ce2temperature.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/ResultadosPrtFixoIdealVs26.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/ResultadosGeraisdoublePrt.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/ResultadosGeraisGeneticmolecular.txt",
		"/home/felipe/Downloads/f03gl/plotfunc.f90",
		"/home/felipe/Documents/ProjetoCebeci/otimization.f90",
		"/home/felipe/Documents/ProjetoCebeci/results/graficos/image1020._400_Avelocity.txt",
		"/home/felipe/Documents/ProjetoCebeci/DNS/DNS_RE_150.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/graficos/images/Temperature_150_071_classico.png",
		"/home/felipe/Documents/ProjetoCebeci/results/graficos/temp.py",
		"/home/felipe/Documents/ProjetoCebeci/DNS/Prt_RE_640_0025.txt",
		"/home/felipe/Documents/ProjetoCebeci/DNS/Prt_RE_395_0025.txt",
		"/home/felipe/Documents/ProjetoCebeci/DNS/Prt_RE_395_071.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/graficos/image 395._10.00_400_Prt(Ret)_A26.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/graficos/image 395._10.00_400_classico.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene395_10_400_Cefisico.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene150_071_400.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene395_0025_400_Cefisico.txt",
		"/home/felipe/Documents/amr3d-paralelo/input/energy.amr3d",
		"/home/felipe/Downloads/install_prerequisites_ubuntu.sh",
		"/home/felipe/.bashrc",
		"/home/felipe/.Xauthority",
		"/home/felipe/.xsession-errors",
		"/home/felipe/.config/Code/CachedData/493869ee8e8a846b0855873886fc79d480d342de/unixTerminal-4f0baab02c5eb176b18157b9177d7a58.code",
		"/usr/share/applications/sublime.desktop",
		"/usr/share/applications/nautilus-classic.desktop",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene1020_071_400.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene150_0025_400.txt",
		"/home/felipe/Documents/ProjetoCebeci/plot/plot_001.png",
		"/home/felipe/Documents/ProjetoCebeci/Resultados.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene395_0025_400_CeSolto.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene395_10_400_CeSolto.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene395_071_400.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/ResultadosGeraisModelados.txt",
		"/home/felipe/Downloads/SnakePy-master/snake.py",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene395_10_400.txt",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene640_071_400.txt",
		"/home/felipe/Documents/ProjetoCebeci/.gitignore",
		"/home/felipe/Documents/ProjetoCebeci/grafics.py",
		"/home/felipe/Documents/ProjetoCebeci/results/ajustecebeciclassico.py",
		"/home/felipe/Documents/ProjetoCebeci/referencias/ED/diferentialevolution.f90",
		"/home/felipe/Documents/ProjetoCebeci/results/Gene1020_071_100.txt",
		"/home/felipe/Documents/ProjetoCebeci/referencias/ED/python/scipy-1.1.0/scipy/optimize/_differentialevolution.py",
		"/home/felipe/Documents/ProjetoCebeci/referencias/ED/python/Exemplo.py",
		"/home/felipe/Documents/ProjetoCebeci/referencias/ED/Rosen.txt",
		"/home/felipe/Documents/ProjetoCebeci/referencias/ED/python/scipy-1.1.0/doc/source/_static/scipy-mathjax/MathJax.js",
		"/home/felipe/Documents/ProjetoCebeci/referencias/ED/python/scipy-1.1.0/setup.py",
		"/home/felipe/Documents/ProjetoCebeci/results/ResultadosPrtvariVs26.txt",
		"/home/felipe/Documents/ProjetoCebeci/otimizationvelocity.f90",
		"/home/felipe/Documents/ProjetoCebeci/DNS/DNS_RE_1000.txt",
		"/home/felipe/Documents/ProjetoCebeci/DNS/DNS_RE_395.txt",
		"/home/felipe/Documents/ProjetoCebeci/DNS/DNS_RE_640.txt",
		"/home/felipe/version",
		"/home/felipe/Downloads/grafics.py",
		"/home/felipe/Documents/ProjetoCebeci/referencias/posmoderno/prandtlcontinum.f90"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 109.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"print",
			"time_",
			"print",
			"navier",
			"slee",
			"step",
			"max",
			"nu",
			"glut",
			"gltu",
			"display",
			"print",
			"go",
			"tempo",
			"glutmainloop",
			"Init",
			"GL_TRUE",
			"end",
			"end module",
			"x(2)",
			"call getcwd",
			"open(10, *)",
			"print",
			"RP",
			"T",
			"T(",
			"f ",
			"Tdns",
			"print",
			"chara",
			"temp",
			"print",
			"write",
			"inport",
			"pr",
			"player",
			"player1",
			"player",
			"X"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"rYY"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Teorico/src/main3.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24451,
						"regions":
						{
						},
						"selection":
						[
							[
								7199,
								7199
							]
						],
						"settings":
						{
							"auto_name": "program cavidade",
							"syntax": "Packages/MinimalFortran/MinimalFortran.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1485.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Teorico/src/visualization.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10883,
						"regions":
						{
						},
						"selection":
						[
							[
								9841,
								9841
							]
						],
						"settings":
						{
							"syntax": "Packages/MinimalFortran/MinimalFortran.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2394.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Teorico/src/main.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14973,
						"regions":
						{
						},
						"selection":
						[
							[
								2498,
								2498
							]
						],
						"settings":
						{
							"syntax": "Packages/MinimalFortran/MinimalFortran.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 278.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Teorico/Tento/OpenGl/mouse_bola_pinga.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7804,
						"regions":
						{
						},
						"selection":
						[
							[
								928,
								928
							]
						],
						"settings":
						{
							"auto_name": "/*",
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Teorico/Tento/OpenGl/piloto.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3498,
						"regions":
						{
						},
						"selection":
						[
							[
								837,
								837
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/home/felipe/Trabalho/ProjetoCebeci/genetic_fit.f90",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 27015,
						"regions":
						{
						},
						"selection":
						[
							[
								22409,
								22409
							]
						],
						"settings":
						{
							"syntax": "Packages/MinimalFortran/MinimalFortran.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2723.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 55.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 169.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "projeto_rayleigh.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"grafics.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Documents/ProjetoCebeci/project.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 241.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
